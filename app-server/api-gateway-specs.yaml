swagger: "2.0"
info:
  title: api-gateway-specs
  description: Specs for the API Gateway
  version: 0.0.0
host: jl-app-server-mvfzomo6rq-an.a.run.app
schemes:
  - https
produces:
  - application/json
x-google-backend:
  address: https://jl-app-server-mvfzomo6rq-an.a.run.app

paths:
  /health-check:
    get:
      summary: Health check endpoint to confirm server is up
      operationId: healthCheck
      security: []
      responses:
        "200":
          description: A successful response

  /articles:
    get:
      summary: Get articles
      operationId: getArticles
      parameters:
        - in: query
          name: page
          type: integer
          minimum: 0
          description: The page of results to return, default 0
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/Article"
        "400":
          description: Bad request
        "500":
          description: Internal server error

  /auth/authn:
    post:
      summary: Authenticate user. Initiates the login flow with Pocket and Just Links.
      operationId: authenticate
      security: []
      responses:
        "303":
          description: See other
          headers:
            location:
              type: string
              description: The url to redirect the user to.
        "500":
          description: Internal server error

  /auth/authz:
    post:
      summary: Authorize user. Completes the login flow with Pocket and Just Links.
      operationId: authorize
      security: []
      consumes:
        - application/json
      parameters:
        - in: body
          name: state
          schema:
            type: object
            required:
              - state
            properties:
              state:
                type: string
                description: A string used to verify the user.
      responses:
        "200":
          description: Ok
          schema:
            type: object
            required:
              - username
            properties:
              username:
                type: string
                description: The username of the user.
          headers:
            set-cookie:
              type: string
              description: The cookie to set for the user.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error

  /auth/session:
    get:
      summary: Get session. Mostly used to check if the user is logged in.
      operationId: getSession
      responses:
        "200":
          description: Ok
          schema:
            type: object
            properties:
              hasSession:
                type: boolean
                description: Whether the user has a session or not.
              username:
                type: string
                description: The username of the user.
        "500":
          description: Internal server error

definitions:
  Image:
    type: object
    required:
      - itemId
      - imageId
      - src
      - width
      - height
      - credit
      - caption
    properties:
      itemId:
        type: string
        description: A unique identifier matching the saved item.
      imageId:
        type: string
        description: A unique identifier for the image.
      src:
        type: string
        description: The original image url that was extracted from the article.
      width:
        type: string
        description: The width of the image.
      height:
        type: string
        description: The height of the image.
      credit:
        type: string
        description: The name of the image's creator.
      caption:
        type: string
        description: The caption of the image.

  Video:
    type: object
    required:
      - itemId
      - videoId
      - src
      - width
      - height
      - vid
    properties:
      itemId:
        type: string
        description: A unique identifier matching the saved item.
      videoId:
        type: string
        description: A unique identifier for the video.
      src:
        type: string
        description: The original video url that was extracted from the article.
      width:
        type: string
        description: The width of the video.
      height:
        type: string
        description: The height of the video.
      vid:
        type: string
      length:
        type: string

  Author:
    type: object
    required:
      - id
      - name
      - url
    properties:
      id:
        type: string
      url:
        type: string
      name:
        type: string
        description: The name of the author.

  Article:
    type: object
    required:
      - itemId
      - givenTitle
      - givenUrl
    properties:
      itemId:
        type: string
        description: |
          A unique identifier matching the saved item. This id must be used to
          perform any actions through the v3/modify endpoint.
      resolveId:
        type: string
        description: |
          A unique identifier similar to the item_id but is unique to the actual
          url of the saved item. The resolved_id identifies unique urls. For
          examples a direct link to a New York Times article and a link that
          redirects (ex a shortened bit.ly url) to the same article will share
          the same resolved_id. If this value is 0, it means that Pocket has not
          processed the item. Normally this happens within seconds but is possible
          you may request the item before it has been resolved.
      givenUrl:
        type: string
        description: |
          The actual url that was saved with the item. This url should be used 
          if the user wants to view the item.
      givenTitle:
        type: string
        description: |
          The title that was saved along with the item. If the title was
          not provided when the item was added, Pocket will make a best
          guess at parsing the title from the content of the page.
      favorite:
        type: boolean
        description: Indicates the item has been favorited.
      status:
        type: string
        description: |
          Indicates the status of the item.
          0 - normal
          1 - archived
          2 - deleted
      timeAdded:
        type: string
        description: The time the item was added to Pocket as a UNIX timestamp.
      timeUpdated:
        type: string
        description: The time the item was updated as a UNIX timestamp.
      timeRead:
        type: string
        description: The time the item was marked as read as a UNIX timestamp.
      timeFavorited:
        type: string
        description: The time the item was favorited as a UNIX timestamp.
      sortId:
        type: integer
        description: A unique identifier used for sorting.
      resolvedUrl:
        type: string
        description: |
          The final url of the item. For example if the item was a shortened
          bit.ly link, this will be the actual article the url linked to.
      resolvedTitle:
        type: string
        description: |
          The title that Pocket found for the item when it was parsed
          from the url. This title is not always the same as the given_title.
      excerpt:
        type: string
        description: The first few lines of the item (articles only).
      isArticle:
        type: string
        description: Indicates the item is an article.
      isIndex:
        type: string
        description: |
          Indicates the item is an index page (e.g. a home page or the
          table of contents).
      hasImage:
        type: string
        description: Indicates the item has images in it.
      hasVideo:
        type: string
        description: Indicates the item has videos in it.
      wordCount:
        type: string
        description: The number of words in the article.
      images:
        type: array
        description: An array of image objects associated with the article.
        items:
          $ref: "#/definitions/Image"
      videos:
        type: array
        description: An array of video objects associated with the article.
        items:
          $ref: "#/definitions/Video"
      tags:
        type: string
      authors:
        type: array
        description: An array of author objects associated with the article.
        items:
          $ref: "#/definitions/Author"
      lang:
        type: string
        description: The language the article is in.
      timeToRead:
        type: string
        description: The estimated time it takes to read the article in minutes.
      listenDurationEstimate:
        type: string
        description: The estimated time it takes to listen to the article in minutes.
      topImageUrl:
        type: string
        description: The url of the article's top image.
      domainMetadata:
        type: object
